#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Module <calendar_dialog.py>. 
Generated by the iqFramework module the Glade prototype.
"""

import datetime
import os
import os.path
import signal
import gi

gi.require_version('Gtk', '3.0')
import gi.repository.Gtk

from ....util import log_func
from ....util import lang_func

from iq.engine.gtk import gtk_handler
# from iq.engine.gtk import gtktreeview_manager
# from iq.engine.gtk import gtkwindow_manager

__version__ = (0, 0, 0, 1)

_ = lang_func.getTranslation().gettext


class iqCalendarDialog(gtk_handler.iqGtkHandler):
    """
    Unknown class.
    """
    def __init__(self, *args, **kwargs):
        self.glade_filename = os.path.join(os.path.dirname(__file__), 'calendar_dialog.glade')
        gtk_handler.iqGtkHandler.__init__(self, glade_filename=self.glade_filename,
                                          top_object_name='calendar_dialog',  
                                          *args, **kwargs)
                                          
    def init(self, default_date=None):
        """
        Init form.

        :param default_date: If define then set default date.
        """
        self.initImages()
        self.initControls(default_date=default_date)

    def initImages(self):
        """
        Init images of controls on form.
        """
        pass

    def initControls(self, default_date=None):
        """
        Init controls method.

        :param default_date: If define then set default date.
        """
        if default_date:
            day = default_date.day
            month = default_date.month
            year = default_date.year
            self.getGtkObject('calendar').select_month(month, year)
            self.getGtkObject('calendar').select_day(day)

    def onCancelButttonClicked(self, widget):
        """
        Cancel button click handler.
        """
        self.getGtkTopObject().close()

    def onOkButtonClicked(self, widget):
        """
        Ok button click handler.
        """
        self.getGtkTopObject().close()


def openCalendarDialog(parent=None, title='', prompt_text='', default_date=None):
    """
    Open calendar dialog.

    :param parent: Parent form.
    :param title: Dialog form title.
    :param prompt_text: Dialog prompt text.
    :param default_date: Default selected date.
    :return: Selected datetime.date or None if cancel button pressed.
    """
    result = None
    dlg = None
    try:
        dlg = iqCalendarDialog()
        dlg.init()
        dlg.getGtkTopObject().set_title(title)
        dlg.getGtkObject('prompt_label').set_label(prompt_text)
        if default_date is not None:
            dlg.getGtkObject('calendar').select_month(month=default_date.month, year=default_date.year)
            dlg.getGtkObject('calendar').select_day(day=default_date.day)

        response = dlg.getGtkTopObject().run()
        if response == gi.repository.Gtk.ResponseType.OK:
            year, month, day = dlg.getGtkObject('calendar').get_date()
            result = datetime.date(year=year, month=month, day=day)
    except:
        log_func.fatal(u'Error open window <calendar_dialog>')

    if dlg and dlg.getGtkTopObject() is not None:
        dlg.getGtkTopObject().destroy()
    return result                    
