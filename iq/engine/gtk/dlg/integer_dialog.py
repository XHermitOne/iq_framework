#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Module <integer_dialog.py>. 
Generated by the iqFramework module the Glade prototype.
"""

import os
import os.path
import signal
import gi

gi.require_version('Gtk', '3.0')
import gi.repository.Gtk

from iq.util import log_func

from iq.engine.gtk import gtk_handler
# from iq.engine.gtk import gtktreeview_manager
# from iq.engine.gtk import gtkwindow_manager

__version__ = (0, 0, 0, 1)

DEFAULT_MIN_VALUE = 0
DEFAULT_MAX_VALUE = 500


class iqIntegerDialog(gtk_handler.iqGtkHandler):
    """
    Unknown class.
    """
    def __init__(self, *args, **kwargs):
        self.glade_filename = os.path.join(os.path.dirname(__file__), 'integer_dialog.glade')
        gtk_handler.iqGtkHandler.__init__(self, glade_filename=self.glade_filename,
                                          top_object_name='integer_dialog',  
                                          *args, **kwargs)
                                          
    def init(self, title=None, label=None,
             min_value=DEFAULT_MIN_VALUE, max_value=DEFAULT_MAX_VALUE):
        """
        Init form.

        :param title: Dialog title.
        :param label: Prompt text.
        :param min_value: Minimum value.
        :param max_value: Maximum value.
        """
        self.initImages()
        self.initControls(title=title, label=label,
                          min_value=min_value, max_value=max_value)

    def initImages(self):
        """
        Init images of controls on form.
        """
        pass

    def initControls(self, title=None, label=None,
                     min_value=DEFAULT_MIN_VALUE, max_value=DEFAULT_MAX_VALUE):
        """
        Init controls method.

        :param title: Dialog title.
        :param label: Prompt text.
        :param min_value: Minimum value.
        :param max_value: Maximum value.
        """
        if title:
            self.getGtkTopObject().set_title(title)
        if label:
            self.getGtkObject('prompt_label').set_text(label)

        min_spinbutton_value = min(min_value, max_value)
        max_spinbutton_value = max(min_value, max_value)
        self.getGtkObject('integer_spinbutton').set_range(min_spinbutton_value,
                                                          max_spinbutton_value)

    def onCancelButtonClicked(self, widget):
        """
        <Cancel> button click handler.
        """
        self.getGtkTopObject().close()

    def onOkButtonClicked(self, widget):
        """
        <OK> button click handler.
        """
        self.getGtkTopObject().close()
