#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Module <int_range_dialog.py>. 
Generated by the iqFramework module the Glade prototype.
"""

import os
import os.path
import signal
import gi

gi.require_version('Gtk', '3.0')
import gi.repository.Gtk

from iq.util import log_func

from iq.engine.gtk import gtk_handler
# from iq.engine.gtk import gtktreeview_manager
# from iq.engine.gtk import gtkwindow_manager

__version__ = (0, 0, 0, 1)


class iqIntRangeDialog(gtk_handler.iqGtkHandler):
    """
    Unknown class.
    """
    def __init__(self, *args, **kwargs):
        self.glade_filename = os.path.join(os.path.dirname(__file__), 'int_range_dialog.glade')
        gtk_handler.iqGtkHandler.__init__(self, glade_filename=self.glade_filename,
                                          top_object_name='int_range_dialog',  
                                          *args, **kwargs)
                                          
    def init(self, title=None, label_begin=None, label_end=None, min_value=0, max_value=100):
        """
        Init form.

        :param title: Dialog title.
        :param label_begin: First prompt text.
        :param label_end: Second prompt text.
        :param min_value: Minimal value.
        :param max_value: Maximal value.
        """
        self.initImages()
        self.initControls(title=title, label_begin=label_begin, label_end=label_end,
                          min_value=min_value, max_value=max_value)

    def initImages(self):
        """
        Init images of controls on form.
        """
        pass

    def initControls(self, title=None, label_begin=None, label_end=None, min_value=0, max_value=100):
        """
        Init controls method.

        :param title: Dialog title.
        :param label_begin: First prompt text.
        :param label_end: Second prompt text.
        :param min_value: Minimal value.
        :param max_value: Maximal value.
        """
        if title:
            self.getGtkTopObject().set_title(title)

        if label_begin:
            self.getGtkObject('first_label').set_value(label_begin)

        if label_end:
            self.getGtkObject('last_label').set_value(label_end)

        self.getGtkObject('first_label').set_range(min_value, max_value)
        self.getGtkObject('last_label').set_range(min_value, max_value)

    def getValue(self):
        """
        Get selected value index.
        """
        return self.getGtkObject('first_spinbutton').get_value(), self.getGtkObject('last_spinbutton').get_value()

    def onCancelButtonClicked(self, widget):
        """
        <Cancel> button click handler.
        """
        self.getGtkTopObject().close()

    def onOkButtonClicked(self, widget):
        """
        <OK> button click handler.
        """
        self.getGtkTopObject().close()
