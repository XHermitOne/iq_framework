#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
Module <text_entry_dialog.py>. 
Generated by the iqFramework module the Glade prototype.
"""

import os
import os.path
import signal
import gi

gi.require_version('Gtk', '3.0')
import gi.repository.Gtk

from iq.util import log_func

from iq.engine.gtk import gtk_handler
# from iq.engine.gtk import gtktreeview_manager
# from iq.engine.gtk import gtkwindow_manager

__version__ = (0, 0, 0, 1)


class iqTextEntryDialog(gtk_handler.iqGtkHandler):
    """
    Text entry dialog class.
    """
    def __init__(self, *args, **kwargs):
        self.glade_filename = os.path.join(os.path.dirname(__file__), 'text_entry_dialog.glade')
        gtk_handler.iqGtkHandler.__init__(self, glade_filename=self.glade_filename,
                                          top_object_name='text_entry_dialog',  
                                          *args, **kwargs)

    def init(self):
        """
        Init form.
        """
        self.initImages()
        self.initControls()

    def initImages(self):
        """
        Init images of controls on form.
        """
        pass

    def initControls(self):
        """
        Init controls method.
        """
        pass

    def setValue(self, text):
        """
        Set text value.

        :param text: Text value.
        """
        self.getGtkTopObject().text_entry.set_value(text)

    def getValue(self):
        """
        Get text value.

        :return: Text value.
        """
        return self.getGtkTopObject().text_entry.get_value()

    def onCancelButtonClicked(self, widget):
        """
        Cancel button click handler.
        """
        self.getGtkTopObject().close()

    def onOkButtonClicked(self, widget):
        """
        OK button click handler.
        """
        self.getGtkTopObject().close()


def openTextEntryDialog(parent=None, title='', prompt_text='', default_value=''):
    """
    Open text_entry_dialog.

    :return: True/False.
    """
    result = None
    dlg = None
    try:
        dlg = iqTextEntryDialog()
        dlg.getGtkTopObject().set_title(title)
        dlg.getGtkTopObject().prompt_text.set_label(prompt_text)
        if default_value is None:
            default_value = ''
        dlg.setValue(str(default_value))
        response = dlg.getGtkTopObject().run()

        if response == gi.repository.Gtk.ResponseType.OK:
            result = dlg.getValue()
    except:
        log_func.fatal(u'Error open window <text_entry_dialog>')

    if dlg and dlg.getGtkTopObject() is not None:
        dlg.getGtkTopObject().destroy()
    return result
